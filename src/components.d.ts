/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface FuiButton {
        "block": boolean;
        "danger": boolean;
        "size": 'large' | 'middle' | 'small';
        "type": 'primary' | 'default' | 'dashed' | 'text' | 'link';
    }
    interface FuiFlex {
        "align": 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch';
        "gap": string | [string, string];
        "justify": 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly';
        "vertical": boolean;
        "wrap": 'nowrap' | 'wrap' | 'wrap-reverse';
    }
    interface FuiHeading {
        "level": 1 | 2 | 3 | 4 | 5 | 6;
        "type": 'secondary' | 'success' | 'warning' | 'danger';
    }
    interface FuiTypography {
        "code": boolean;
        "deleted": boolean;
        "disabled": boolean;
        "italic": boolean;
        "keyboard": boolean;
        "mark": boolean;
        "strong": boolean;
        "type": 'text' | 'secondary' | 'success' | 'warning' | 'danger';
        "underline": boolean;
    }
}
declare global {
    interface HTMLFuiButtonElement extends Components.FuiButton, HTMLStencilElement {
    }
    var HTMLFuiButtonElement: {
        prototype: HTMLFuiButtonElement;
        new (): HTMLFuiButtonElement;
    };
    interface HTMLFuiFlexElement extends Components.FuiFlex, HTMLStencilElement {
    }
    var HTMLFuiFlexElement: {
        prototype: HTMLFuiFlexElement;
        new (): HTMLFuiFlexElement;
    };
    interface HTMLFuiHeadingElement extends Components.FuiHeading, HTMLStencilElement {
    }
    var HTMLFuiHeadingElement: {
        prototype: HTMLFuiHeadingElement;
        new (): HTMLFuiHeadingElement;
    };
    interface HTMLFuiTypographyElement extends Components.FuiTypography, HTMLStencilElement {
    }
    var HTMLFuiTypographyElement: {
        prototype: HTMLFuiTypographyElement;
        new (): HTMLFuiTypographyElement;
    };
    interface HTMLElementTagNameMap {
        "fui-button": HTMLFuiButtonElement;
        "fui-flex": HTMLFuiFlexElement;
        "fui-heading": HTMLFuiHeadingElement;
        "fui-typography": HTMLFuiTypographyElement;
    }
}
declare namespace LocalJSX {
    interface FuiButton {
        "block"?: boolean;
        "danger"?: boolean;
        "size"?: 'large' | 'middle' | 'small';
        "type"?: 'primary' | 'default' | 'dashed' | 'text' | 'link';
    }
    interface FuiFlex {
        "align"?: 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch';
        "gap"?: string | [string, string];
        "justify"?: 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly';
        "vertical"?: boolean;
        "wrap"?: 'nowrap' | 'wrap' | 'wrap-reverse';
    }
    interface FuiHeading {
        "level"?: 1 | 2 | 3 | 4 | 5 | 6;
        "type"?: 'secondary' | 'success' | 'warning' | 'danger';
    }
    interface FuiTypography {
        "code"?: boolean;
        "deleted"?: boolean;
        "disabled"?: boolean;
        "italic"?: boolean;
        "keyboard"?: boolean;
        "mark"?: boolean;
        "strong"?: boolean;
        "type"?: 'text' | 'secondary' | 'success' | 'warning' | 'danger';
        "underline"?: boolean;
    }
    interface IntrinsicElements {
        "fui-button": FuiButton;
        "fui-flex": FuiFlex;
        "fui-heading": FuiHeading;
        "fui-typography": FuiTypography;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "fui-button": LocalJSX.FuiButton & JSXBase.HTMLAttributes<HTMLFuiButtonElement>;
            "fui-flex": LocalJSX.FuiFlex & JSXBase.HTMLAttributes<HTMLFuiFlexElement>;
            "fui-heading": LocalJSX.FuiHeading & JSXBase.HTMLAttributes<HTMLFuiHeadingElement>;
            "fui-typography": LocalJSX.FuiTypography & JSXBase.HTMLAttributes<HTMLFuiTypographyElement>;
        }
    }
}
